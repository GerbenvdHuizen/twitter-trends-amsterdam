AWSTemplateFormatVersion: "2010-09-09"


Parameters:
  DeploymentBucket:
    Type: String
    Default: deployment-fdx-202204-cf


Resources:

### BUCKET

  BucketTrends:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: bucket-fdx-202204-cf
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain

### EMR

  EmrroleTrends:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: elasticmapreduce.amazonaws.com
        Version: "2012-10-17"
      Description: defines permissions for the Trends EMR Spark session
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonElasticMapReduceRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonS3ReadOnlyAccess
      RoleName: trends_emr_role
  EmrroleDefaultPolicyTrends:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ec2:Describe*
              - ec2:RunInstances
              - elasticmapreduce:Describe*
              - elasticmapreduce:ListBootstrapActions
              - elasticmapreduce:ListClusters
              - elasticmapreduce:ListInstanceGroups
              - elasticmapreduce:ListInstances
              - elasticmapreduce:ListSteps
              - cloudwatch:PutMetricData
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:*
            Effect: Allow
            Resource:
              - !Sub "arn:aws:s3:::${DeploymentBucket}"
              - !Sub "arn:aws:s3:::${DeploymentBucket}/*"
              - Fn::GetAtt:
                  - BucketTrends
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - BucketTrends
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: EmrroleDefaultPolicyTrends
      Roles:
        - Ref: EmrroleTrends
  Emrec2roleTrends:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      Description: defines permissions for the Trends EMR EC2 instances
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonS3ReadOnlyAccess
      RoleName: trends_emr_ec2_role
  Emrec2roleDefaultPolicyTrends:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ec2:Describe*
              - ec2:RunInstances
              - elasticmapreduce:Describe*
              - elasticmapreduce:ListBootstrapActions
              - elasticmapreduce:ListClusters
              - elasticmapreduce:ListInstanceGroups
              - elasticmapreduce:ListInstances
              - elasticmapreduce:ListSteps
              - cloudwatch:PutMetricData
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:*
            Effect: Allow
            Resource:
              - !Sub "arn:aws:s3:::${DeploymentBucket}"
              - !Sub "arn:aws:s3:::${DeploymentBucket}/*"
              - Fn::GetAtt:
                  - BucketTrends
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - BucketTrends
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: Emrec2roleDefaultPolicyTrends
      Roles:
        - Ref: Emrec2roleTrends
  EmrInstanceProf:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: Emrec2roleTrends
      InstanceProfileName:
        Ref: Emrec2roleTrends
  LambdaRoleTrends:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      Description: defines permissions for the Trends EMR Spark session lambda
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      RoleName: lambda_trends_execution_role
  LambdaPolicyTrends:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ssm:*
            Effect: Allow
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/test/trends/*"
          - Action:
              - lambda:*
            Effect: Allow
            Resource: "*"
          - Action:
              - firehose:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DeliveryStream
                  - Arn
          - Action:
              - elasticmapreduce:*
            Effect: Allow
            Resource: "*"
          - Action:
              - iam:PassRole
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - EmrroleTrends
                  - Arn
              - Fn::GetAtt:
                  - Emrec2roleTrends
                  - Arn
          - Action:
              - s3:*
            Effect: Allow
            Resource:
              - !Sub "arn:aws:s3:::${DeploymentBucket}"
              - !Sub "arn:aws:s3:::${DeploymentBucket}/*"
              - Fn::GetAtt:
                  - BucketTrends
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - BucketTrends
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: LambdaPolicyTrends
      Roles:
        - Ref: LambdaRoleTrends
  TrendLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref DeploymentBucket
        S3Key: lambdas/trend_lambda.zip
      Description: Trends Pipeline Lambda
      FunctionName: trend-pipeline-function
      Handler: lambda.lambda_handler
      MemorySize: 128
      Role: !GetAtt "LambdaRoleTrends.Arn"
      Runtime: python3.8
      Timeout: 30

### FIREHOSE

  TwitterLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref DeploymentBucket
        S3Key: lambdas/twitter_lambda.zip
      Description: Twitter Pipeline Lambda
      FunctionName: twitter-pipeline-function
      Handler: lambda.lambda_handler
      MemorySize: 512
      Role: !GetAtt "LambdaRoleTrends.Arn"
      Runtime: python3.8
      Timeout: 600

  TwitterLambdaRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Rule for scheduling TwitterLambda
      ScheduleExpression: "cron(0 1 * * ? *)"
      Targets:
        - Arn: !GetAtt "TwitterLambda.Arn"
          Id: 1

  TwitterLambdaRulePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt "TwitterLambda.Arn"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt "TwitterLambdaRule.Arn"

  DeliveryStream:
    DependsOn:
      - DeliveryPolicy
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: twitter-status-delivery-stream
      ExtendedS3DestinationConfiguration:
        BucketARN: !GetAtt BucketTrends.Arn
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 50
        CompressionFormat: UNCOMPRESSED
        Prefix: firehose/
        RoleARN: !GetAtt DeliveryRole.Arn

  DeliveryRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ""
            Effect: Allow
            Principal:
              Service: firehose.amazonaws.com
            Action: "sts:AssumeRole"

  DeliveryPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: firehose_delivery_policy_trends
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - s3:*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - BucketTrends
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - BucketTrends
                        - Arn
                    - /*
      Roles:
        - !Ref DeliveryRole


### API

  APIProxyLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref DeploymentBucket
        S3Key: lambdas/api_lambda.zip
      Description: Trends Pipeline Lambda
      FunctionName: api-proxy-trend-function
      Handler: lambda.lambda_handler
      MemorySize: 128
      Role: !GetAtt "LambdaRoleTrends.Arn"
      Runtime: python3.8
      Timeout: 30

  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: trends-api
      Description: "Simple API to fetch trends"

  ProxyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ApiGateway.RootResourceId
      RestApiId: !Ref ApiGateway
      PathPart: "{proxy+}"

  ApiGatewayRootMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: ANY
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        IntegrationResponses:
          - StatusCode: 200
        Uri: !Sub
          - "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations"
          - lambdaArn: !GetAtt "APIProxyLambda.Arn"
      ResourceId: !Ref ProxyResource
      RestApiId: !Ref ApiGateway

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - ApiGatewayRootMethod
    Properties:
      RestApiId: !Ref ApiGateway
      StageName: "api"

  LambdaApiGatewayInvoke:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt "APIProxyLambda.Arn"
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/*/*"

# SSM

  BucketTrendsName:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: "/test/trends/bucketname"
      Value: !Ref BucketTrends

  TrendLambdaName:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: "/test/trends/trend-lambda"
      Value: !Ref TrendLambda

  DeliveryStreamName:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: "/test/trends/deliverystream"
      Value: !Ref DeliveryStream

  RecordDir:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: "/test/trends/record-dir"
      Value: "/firehose"

  EMRRoleName:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: "/test/trends/emr-role"
      Value: !Ref EmrroleTrends

  EMREC2RoleName:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: "/test/trends/emr-ec2-role"
      Value: !Ref Emrec2roleTrends
